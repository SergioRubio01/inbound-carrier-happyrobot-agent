"""Add sample data for testing

Revision ID: 002_add_sample_data
Revises: 001_initial_schema
Create Date: 2024-08-15 14:00:00.000000

"""

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql
import uuid
from datetime import datetime, date, time

# revision identifiers, used by Alembic.
revision = "002_add_sample_data"
down_revision = "001_initial_schema"
branch_labels = None
depends_on = None


def upgrade():
    # Insert sample carriers
    carriers_table = sa.table(
        "carriers",
        sa.column("carrier_id", postgresql.UUID),
        sa.column("mc_number", sa.String),
        sa.column("dot_number", sa.String),
        sa.column("legal_name", sa.String),
        sa.column("dba_name", sa.String),
        sa.column("entity_type", sa.String),
        sa.column("operating_status", sa.String),
        sa.column("status", sa.String),
        sa.column("insurance_on_file", sa.Boolean),
        sa.column("bipd_required", sa.NUMERIC),
        sa.column("bipd_on_file", sa.NUMERIC),
        sa.column("cargo_required", sa.NUMERIC),
        sa.column("cargo_on_file", sa.NUMERIC),
        sa.column("bond_required", sa.NUMERIC),
        sa.column("bond_on_file", sa.NUMERIC),
        sa.column("safety_rating", sa.String),
        sa.column("safety_rating_date", sa.Date),
        sa.column("safety_scores", postgresql.JSONB),
        sa.column("primary_contact", postgresql.JSONB),
        sa.column("address", postgresql.JSONB),
        sa.column("eligibility_notes", sa.Text),
        sa.column("last_verified_at", sa.TIMESTAMP),
        sa.column("verification_source", sa.String),
        sa.column("created_by", sa.String),
        sa.column("version", sa.Integer),
        sa.column("created_at", sa.DateTime),
        sa.column("updated_at", sa.DateTime),
    )

    carrier_1_id = uuid.uuid4()
    carrier_2_id = uuid.uuid4()
    carrier_3_id = uuid.uuid4()

    op.bulk_insert(
        carriers_table,
        [
            {
                "carrier_id": carrier_1_id,
                "mc_number": "123456",
                "dot_number": "1234567",
                "legal_name": "ACME TRUCKING LLC",
                "dba_name": "ACME TRUCKING",
                "entity_type": "CARRIER",
                "operating_status": "AUTHORIZED_FOR_HIRE",
                "status": "ACTIVE",
                "insurance_on_file": True,
                "bipd_required": 750000.00,
                "bipd_on_file": 1000000.00,
                "cargo_required": 100000.00,
                "cargo_on_file": 100000.00,
                "bond_required": 0.00,
                "bond_on_file": 0.00,
                "safety_rating": "SATISFACTORY",
                "safety_rating_date": date(2024, 1, 15),
                "safety_scores": {
                    "basic_score": 85,
                    "crash_indicator": "None",
                    "hazmat_indicator": "None",
                    "vehicle_maintenance": "Satisfactory",
                    "driver_fitness": "Satisfactory",
                    "hours_of_service": "Satisfactory",
                    "vehicle_inspection": "Satisfactory",
                    "controlled_substances": "Satisfactory",
                },
                "primary_contact": {
                    "name": "John Smith",
                    "phone": "(555) 123-4567",
                    "email": "john.smith@acmetrucking.com",
                    "title": "Operations Manager",
                },
                "address": {
                    "street": "123 Main St",
                    "city": "Dallas",
                    "state": "TX",
                    "zip": "75201",
                    "country": "US",
                    "lat": 32.7767,
                    "lng": -96.7970,
                },
                "eligibility_notes": "Valid and active carrier with good safety record",
                "last_verified_at": datetime.utcnow(),
                "verification_source": "FMCSA",
                "created_by": "system",
                "version": 1,
                "created_at": datetime.utcnow(),
                "updated_at": datetime.utcnow(),
            },
            {
                "carrier_id": carrier_2_id,
                "mc_number": "789012",
                "dot_number": "7890123",
                "legal_name": "RELIABLE TRANSPORT INC",
                "dba_name": "RELIABLE TRANSPORT",
                "entity_type": "CARRIER",
                "operating_status": "AUTHORIZED_FOR_HIRE",
                "status": "ACTIVE",
                "insurance_on_file": True,
                "bipd_required": 750000.00,
                "bipd_on_file": 1000000.00,
                "cargo_required": 100000.00,
                "cargo_on_file": 100000.00,
                "bond_required": 0.00,
                "bond_on_file": 0.00,
                "safety_rating": "SATISFACTORY",
                "safety_rating_date": date(2024, 2, 1),
                "safety_scores": {
                    "basic_score": 92,
                    "crash_indicator": "None",
                    "hazmat_indicator": "None",
                    "vehicle_maintenance": "Satisfactory",
                    "driver_fitness": "Satisfactory",
                    "hours_of_service": "Satisfactory",
                    "vehicle_inspection": "Satisfactory",
                    "controlled_substances": "Satisfactory",
                },
                "primary_contact": {
                    "name": "Sarah Johnson",
                    "phone": "(555) 987-6543",
                    "email": "sarah.johnson@reliabletransport.com",
                    "title": "Fleet Manager",
                },
                "address": {
                    "street": "456 Industrial Blvd",
                    "city": "Atlanta",
                    "state": "GA",
                    "zip": "30309",
                    "country": "US",
                    "lat": 33.7490,
                    "lng": -84.3880,
                },
                "eligibility_notes": "Excellent carrier with high safety scores",
                "last_verified_at": datetime.utcnow(),
                "verification_source": "FMCSA",
                "created_by": "system",
                "version": 1,
                "created_at": datetime.utcnow(),
                "updated_at": datetime.utcnow(),
            },
            {
                "carrier_id": carrier_3_id,
                "mc_number": "999999",
                "dot_number": "9999999",
                "legal_name": "INACTIVE CARRIER",
                "dba_name": "INACTIVE CARRIER",
                "entity_type": "CARRIER",
                "operating_status": "OUT_OF_SERVICE",
                "status": "INACTIVE",
                "insurance_on_file": False,
                "bipd_required": 750000.00,
                "bipd_on_file": 0.00,
                "cargo_required": 100000.00,
                "cargo_on_file": 0.00,
                "bond_required": 0.00,
                "bond_on_file": 0.00,
                "safety_rating": "CONDITIONAL",
                "safety_rating_date": date(2023, 8, 15),
                "safety_scores": {
                    "basic_score": 45,
                    "crash_indicator": "Alert",
                    "hazmat_indicator": "None",
                    "vehicle_maintenance": "Conditional",
                    "driver_fitness": "Conditional",
                    "hours_of_service": "Conditional",
                    "vehicle_inspection": "Alert",
                    "controlled_substances": "Satisfactory",
                },
                "primary_contact": {
                    "name": "Mike Wilson",
                    "phone": "(555) 555-5555",
                    "email": "mike.wilson@inactivecarrier.com",
                    "title": "Owner",
                },
                "address": {
                    "street": "789 Old Highway 99",
                    "city": "Phoenix",
                    "state": "AZ",
                    "zip": "85001",
                    "country": "US",
                    "lat": 33.4484,
                    "lng": -112.0740,
                },
                "eligibility_notes": "Carrier is not eligible due to out of service status and insurance issues",
                "last_verified_at": datetime.utcnow(),
                "verification_source": "FMCSA",
                "created_by": "system",
                "version": 1,
                "created_at": datetime.utcnow(),
                "updated_at": datetime.utcnow(),
            },
        ],
    )

    # Insert sample loads
    loads_table = sa.table(
        "loads",
        sa.column("load_id", postgresql.UUID),
        sa.column("reference_number", sa.String),
        sa.column("external_id", sa.String),
        sa.column("origin_city", sa.String),
        sa.column("origin_state", sa.String),
        sa.column("origin_zip", sa.String),
        sa.column("origin_coordinates", postgresql.JSONB),
        sa.column("destination_city", sa.String),
        sa.column("destination_state", sa.String),
        sa.column("destination_zip", sa.String),
        sa.column("destination_coordinates", postgresql.JSONB),
        sa.column("pickup_date", sa.Date),
        sa.column("pickup_time_start", sa.Time),
        sa.column("pickup_time_end", sa.Time),
        sa.column("pickup_appointment_required", sa.Boolean),
        sa.column("delivery_date", sa.Date),
        sa.column("delivery_time_start", sa.Time),
        sa.column("delivery_time_end", sa.Time),
        sa.column("delivery_appointment_required", sa.Boolean),
        sa.column("equipment_type", sa.String),
        sa.column("weight", sa.Integer),
        sa.column("pieces", sa.Integer),
        sa.column("commodity_type", sa.String),
        sa.column("commodity_description", sa.Text),
        sa.column("hazmat", sa.Boolean),
        sa.column("miles", sa.Integer),
        sa.column("estimated_transit_hours", sa.Integer),
        sa.column("loadboard_rate", sa.NUMERIC),
        sa.column("fuel_surcharge", sa.NUMERIC),
        sa.column("minimum_rate", sa.NUMERIC),
        sa.column("maximum_rate", sa.NUMERIC),
        sa.column("target_rate", sa.NUMERIC),
        sa.column("auto_accept_threshold", sa.NUMERIC),
        sa.column("broker_company", sa.String),
        sa.column("broker_contact", postgresql.JSONB),
        sa.column("customer_name", sa.String),
        sa.column("status", sa.String),
        sa.column("urgency", sa.String),
        sa.column("priority_score", sa.Integer),
        sa.column("is_active", sa.Boolean),
        sa.column("source", sa.String),
        sa.column("created_by", sa.String),
        sa.column("version", sa.Integer),
        sa.column("created_at", sa.DateTime),
        sa.column("updated_at", sa.DateTime),
    )

    load_1_id = uuid.uuid4()
    load_2_id = uuid.uuid4()
    load_3_id = uuid.uuid4()

    op.bulk_insert(
        loads_table,
        [
            {
                "load_id": load_1_id,
                "reference_number": "LOAD001",
                "external_id": "DAT_LOAD_001",
                "origin_city": "Chicago",
                "origin_state": "IL",
                "origin_zip": "60601",
                "origin_coordinates": {"lat": 41.8781, "lng": -87.6298},
                "destination_city": "Los Angeles",
                "destination_state": "CA",
                "destination_zip": "90210",
                "destination_coordinates": {"lat": 34.0522, "lng": -118.2437},
                "pickup_date": date(2024, 8, 20),
                "pickup_time_start": time(8, 0),
                "pickup_time_end": time(17, 0),
                "pickup_appointment_required": False,
                "delivery_date": date(2024, 8, 23),
                "delivery_time_start": time(6, 0),
                "delivery_time_end": time(16, 0),
                "delivery_appointment_required": True,
                "equipment_type": "53-foot van",
                "weight": 25000,
                "pieces": 15,
                "commodity_type": "Electronics",
                "commodity_description": "Consumer electronics and computer components",
                "hazmat": False,
                "miles": 2015,
                "estimated_transit_hours": 48,
                "loadboard_rate": 2800.00,
                "fuel_surcharge": 150.00,
                "minimum_rate": 2600.00,
                "maximum_rate": 3000.00,
                "target_rate": 2850.00,
                "auto_accept_threshold": 2750.00,
                "broker_company": "National Freight Solutions",
                "broker_contact": {
                    "name": "Jennifer Davis",
                    "phone": "(312) 555-0123",
                    "email": "jennifer.davis@nfs.com",
                },
                "customer_name": "TechCorp Distribution",
                "status": "AVAILABLE",
                "urgency": "NORMAL",
                "priority_score": 75,
                "is_active": True,
                "source": "DAT",
                "created_by": "system",
                "version": 1,
                "created_at": datetime.utcnow(),
                "updated_at": datetime.utcnow(),
            },
            {
                "load_id": load_2_id,
                "reference_number": "LOAD002",
                "external_id": "DAT_LOAD_002",
                "origin_city": "Atlanta",
                "origin_state": "GA",
                "origin_zip": "30309",
                "origin_coordinates": {"lat": 33.7490, "lng": -84.3880},
                "destination_city": "Miami",
                "destination_state": "FL",
                "destination_zip": "33101",
                "destination_coordinates": {"lat": 25.7617, "lng": -80.1918},
                "pickup_date": date(2024, 8, 21),
                "pickup_time_start": time(6, 0),
                "pickup_time_end": time(12, 0),
                "pickup_appointment_required": True,
                "delivery_date": date(2024, 8, 22),
                "delivery_time_start": time(8, 0),
                "delivery_time_end": time(18, 0),
                "delivery_appointment_required": True,
                "equipment_type": "Reefer",
                "weight": 30000,
                "pieces": 500,
                "commodity_type": "Frozen Foods",
                "commodity_description": "Frozen vegetables and prepared meals",
                "hazmat": False,
                "miles": 662,
                "estimated_transit_hours": 14,
                "loadboard_rate": 1850.00,
                "fuel_surcharge": 75.00,
                "minimum_rate": 1750.00,
                "maximum_rate": 2000.00,
                "target_rate": 1900.00,
                "auto_accept_threshold": 1800.00,
                "broker_company": "Cold Chain Logistics",
                "broker_contact": {
                    "name": "Robert Chen",
                    "phone": "(404) 555-0456",
                    "email": "robert.chen@coldchain.com",
                },
                "customer_name": "FreshFoods Market",
                "status": "AVAILABLE",
                "urgency": "HIGH",
                "priority_score": 90,
                "is_active": True,
                "source": "DAT",
                "created_by": "system",
                "version": 1,
                "created_at": datetime.utcnow(),
                "updated_at": datetime.utcnow(),
            },
            {
                "load_id": load_3_id,
                "reference_number": "LOAD003",
                "external_id": "MANUAL_LOAD_003",
                "origin_city": "Denver",
                "origin_state": "CO",
                "origin_zip": "80202",
                "origin_coordinates": {"lat": 39.7392, "lng": -104.9903},
                "destination_city": "Phoenix",
                "destination_state": "AZ",
                "destination_zip": "85001",
                "destination_coordinates": {"lat": 33.4484, "lng": -112.0740},
                "pickup_date": date(2024, 8, 22),
                "pickup_time_start": time(7, 0),
                "pickup_time_end": time(15, 0),
                "pickup_appointment_required": False,
                "delivery_date": date(2024, 8, 24),
                "delivery_time_start": time(6, 0),
                "delivery_time_end": time(18, 0),
                "delivery_appointment_required": False,
                "equipment_type": "Flatbed",
                "weight": 45000,
                "pieces": 8,
                "commodity_type": "Construction Materials",
                "commodity_description": "Steel beams and construction hardware",
                "hazmat": False,
                "miles": 602,
                "estimated_transit_hours": 12,
                "loadboard_rate": 1650.00,
                "fuel_surcharge": 100.00,
                "minimum_rate": 1500.00,
                "maximum_rate": 1800.00,
                "target_rate": 1700.00,
                "auto_accept_threshold": 1600.00,
                "broker_company": "Heavy Haul Pro",
                "broker_contact": {
                    "name": "Maria Rodriguez",
                    "phone": "(303) 555-0789",
                    "email": "maria.rodriguez@heavyhaulpro.com",
                },
                "customer_name": "Mountain Construction Co",
                "status": "AVAILABLE",
                "urgency": "LOW",
                "priority_score": 60,
                "is_active": True,
                "source": "MANUAL",
                "created_by": "operations_user",
                "version": 1,
                "created_at": datetime.utcnow(),
                "updated_at": datetime.utcnow(),
            },
        ],
    )


def downgrade():
    # Delete sample data
    op.execute(
        "DELETE FROM loads WHERE reference_number IN ('LOAD001', 'LOAD002', 'LOAD003')"
    )
    op.execute("DELETE FROM carriers WHERE mc_number IN ('123456', '789012', '999999')")
